(self["webpackChunkgmtc_2021_webgpu_slide"]=self["webpackChunkgmtc_2021_webgpu_slide"]||[]).push([[912],{5404:(e,n,t)=>{"use strict";t.d(n,{CT:()=>r,Ky:()=>a,ag:()=>s,J9:()=>d,Vc:()=>i,KB:()=>o});const r="let gl = this.canvas.getContext( 'webgl' );\n    gl.createShader( type );\n    gl.shaderSource( shader, sourceCode );\n    gl.compileShader( shader );\n    gl.createProgram();\n    gl.attachShader( program, shader );\n    gl.linkProgram( program );\n    gl.useProgram( program );\n    gl.createBuffer();\n    gl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n    gl.bufferData( gl.ARRAY_BUFFER, dataView, gl.STATIC_DRAW );\n    gl.clear( gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT );\n    gl.drawArrays( mode, 0, size );\n",a="let adapter = await navigator.gpu.requestAdapter();\nlet device = await adapter.requestDevice();\nlet context = canvas.getContext('webgpu');\nlet context.configure({ ... });\nlet commandEncoder = device.createCommandEncoder();\n    let renderPassEncoder = commandEncoder.beginRenderPass(renderPassDescriptor);\n    let renderPipeline = await device.createRenderPipelineAsync(pipelineDescriptor);\n    renderPassEncoder.setPipeline(renderPipeline);\n    renderPassEncoder.drawIndexed(indexCount, 1, 0, 0, 0);\n    renderPassEncoder.endPass();\ndevice.queue.submit([ commandEncoder.finish() ]);\n",s="// 获取硬件设备\nlet adapter = await navigator.gpu.requestAdapter();\nlet device = await adapter.requestDevice();\n\n// 可以用 Canvas，也可以不用 Canvas，还可以用很多 Canvas；用的话就把 Canvas 与设备相连\nlet context = canvas.getContext( 'webgpu' );\nlet context.configure( { ... });\n\n// 创建命令编码器，所有 GPU 指令都是通过它发给 GPU 的\nlet commandEncoder = device.createCommandEncoder();\n    \n    // 创建渲染通道、渲染管线、着色器……等等所有你想做的 GPU 指令\n    let renderPassEncoder = commandEncoder.beginRenderPass( renderPassDescriptor );\n    let renderPipeline = await device.createRenderPipelineAsync( renderPipelineDescriptor );\n    renderPassEncoder.setPipeline( renderPipeline );\n    renderPassEncoder.drawIndexed( indexCount, 1, 0, 0, 0 );\n    renderPassEncoder.endPass();\n\n// 结束命令编码器并发送到 GPU 设备的指令队列中\ndevice.queue.submit( [ commandEncoder.finish() ] );\n",d="[[block]]\nstruct Uniforms {\n    [[size(64)]]uPMatrix: mat4x4<f32>;\n    [[size(64)]]uMVMatrix: mat4x4<f32>;\n};\n\n[[group(0), binding(0)]]\nvar<uniform> uniforms: Uniforms;\n\n[[stage(vertex)]]\nfn main (\n    [[location(0)]] aVertexPosition : vec3<f32>\n) -> [[builtin(position)]] vec4<f32> {\n    return uniforms.uPMatrix * uniforms.uMVMatrix * vec4<f32>(aVertexPosition, 1.0);\n}",i="Array.sort( \n        \n    ( a, b ) => {\n\n        return a - b;\n\n    }\n\n);\n\n\n\n\n\n\n",o="let adapter = await navigator.gpu.requestAdapter();\nlet device = await adapter.requestDevice();\nlet commandEncoder = device.createCommandEncoder();\nlet passEncoder = commandEncoder.beginComputePass();\nlet shaderModule = device.createShaderModule({code: shaderCode});\nlet pipeline = await device.createComputePipelineAsync({\n    compute: {\n        module: shaderModule,\n        entryPoint: 'main'\n    }\n});\npassEncoder.setPipeline(pipeline);\npassEncoder.dispatch(threadgroupsPerGrid, 1, 1);\npassEndocer.endPass();\ndevice.queue.submit( [ commandEncoder.finish() ] );\n"},3832:(e,n,t)=>{"use strict";t.d(n,{Z:()=>s});var r=t(1959),a=t(3673);function s(e){const n=(0,r.iH)(0),t=t=>{if(" "===t.key||"Spacebar"===t.key){if(n.value===e)return void(n.value=0);n.value++}};return(0,a.bv)((()=>{window.addEventListener("keyup",t)})),(0,a.Jd)((()=>{window.removeEventListener("keyup",t)})),{show:n}}},1851:(e,n,t)=>{"use strict";t.d(n,{Z:()=>c});var r=t(3673),a=t(2323);function s(e,n,t,s,d,i){const o=(0,r.up)("prism");return(0,r.wg)(),(0,r.j4)(o,{language:t.language,class:(0,a.C_)(t.fontClass)},{default:(0,r.w5)((()=>[(0,r.Uk)((0,a.zw)(t.code),1)])),_:1},8,["language","class"])}t(3857);var d=t(4761),i=t.n(d);t(4732),t(8763);const o={components:{prism:i()},props:{code:{type:String,required:!0},language:{type:String,default:"javascript"},fontClass:{type:String,default:"display-1"}}};o.render=s,o.__scopeId="data-v-30dcf0fe";const c=o},8912:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>q});var r=t(3673),a=t(2797),s=t.n(a),d=t(6325),i=t.n(d);const o={key:0,class:"row justify-center items-center content-center wrap q-gutter-md text-white text-center text-weight-regular q-gutter-xl full-width"},c={class:"col-5"},l=(0,r._)("div",{class:"text-h6"},[(0,r._)("a",{href:"https://www.babylonjs.com/demos/webgpu/forestwebgl",target:"_blank",class:"text-white"},"https://www.babylonjs.com/demos/webgpu/forestwebgl")],-1),u={class:"col-5 q-pa-md"},p=(0,r._)("div",{class:"text-h6"},[(0,r._)("a",{href:"https://www.babylonjs.com/demos/webgpu/forestwebgpu",target:"_blank",class:"text-white"},"https://www.babylonjs.com/demos/webgpu/forestwebgpu")],-1),g={key:1,class:"row justify-center items-center content-center wrap q-gutter-md text-white text-center text-weight-regular q-gutter-xl full-width"},m={class:"col-10 p-box q-pa-md text-h4"},w={key:2,class:"row justify-center items-center content-center wrap q-gutter-md text-white text-center text-weight-regular q-gutter-xl full-width"},v={class:"col-11 p-box q-pa-md text-h4"};function f(e,n,t,a,d,f){const h=(0,r.up)("q-img"),x=(0,r.up)("highlight-code"),b=(0,r.up)("q-page");return(0,r.wg)(),(0,r.j4)(b,{class:"flex flex-center"},{default:(0,r.w5)((()=>[0===e.show?((0,r.wg)(),(0,r.iD)("div",o,[(0,r._)("div",c,[(0,r.Wm)(h,{src:s(),style:{width:"750px"}}),l]),(0,r._)("div",u,[(0,r.Wm)(h,{src:i(),style:{width:"750px"}}),p])])):(0,r.kq)("",!0),1===e.show?((0,r.wg)(),(0,r.iD)("div",g,[(0,r._)("div",m,[(0,r.Wm)(x,{code:e.glDemoCode},null,8,["code"])])])):2===e.show?((0,r.wg)(),(0,r.iD)("div",w,[(0,r._)("div",v,[(0,r.Wm)(x,{code:e.gpuDemoCode},null,8,["code"])])])):(0,r.kq)("",!0)])),_:1})}var h=t(3832),x=t(1851),b=t(5404);const P=(0,r.aZ)({components:{HighlightCode:x.Z},setup(){const{show:e}=(0,h.Z)(2);return{show:e,glDemoCode:b.CT,gpuDemoCode:b.Ky}}});var E=t(4379),C=t(4027),y=t(7518),_=t.n(y);P.render=f;const q=P;_()(P,"components",{QPage:E.Z,QImg:C.Z})},2797:(e,n,t)=>{e.exports=t.p+"img/webgl-trees.4952c90d.png"},6325:(e,n,t)=>{e.exports=t.p+"img/webgpu-trees.9aea6070.png"}}]);